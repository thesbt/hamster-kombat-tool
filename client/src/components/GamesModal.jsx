import React from 'react';
import Modal from 'react-modal';
import { FaTimes } from 'react-icons/fa';

function GamesModal({ isOpen, onRequestClose, gameData, isDarkMode, t }) {
  const formatDate = (timestamp) => {
    const date = new Date(parseInt(timestamp) * 1000);
    return date.toLocaleString('tr-TR');
  };

  const formatCardName = (cardName) => {
    return cardName
      .split('_')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  };

  const morseCodeMap = {
    'A': 'ðŸŸ âž–', 'B': 'âž–ðŸŸ ðŸŸ ðŸŸ ', 'C': 'âž–ðŸŸ âž–ðŸŸ ', 'D': 'âž–ðŸŸ ðŸŸ ', 'E': 'ðŸŸ ', 'F': 'ðŸŸ ðŸŸ âž–ðŸŸ ',
    'G': 'âž–âž–ðŸŸ ', 'H': 'ðŸŸ ðŸŸ ðŸŸ ðŸŸ ', 'I': 'ðŸŸ ðŸŸ ', 'J': 'ðŸŸ âž–âž–âž–', 'K': 'âž–ðŸŸ âž–', 'L': 'ðŸŸ âž–ðŸŸ ðŸŸ ',
    'M': 'âž–âž–', 'N': 'âž–ðŸŸ ', 'O': 'âž–âž–âž–', 'P': 'ðŸŸ âž–âž–ðŸŸ ', 'Q': 'âž–âž–ðŸŸ âž–', 'R': 'ðŸŸ âž–ðŸŸ ',
    'S': 'ðŸŸ ðŸŸ ðŸŸ ', 'T': 'âž–', 'U': 'ðŸŸ ðŸŸ âž–', 'V': 'ðŸŸ ðŸŸ ðŸŸ âž–', 'W': 'ðŸŸ âž–âž–', 'X': 'âž–ðŸŸ ðŸŸ âž–',
    'Y': 'âž–ðŸŸ âž–âž–', 'Z': 'âž–âž–ðŸŸ ðŸŸ ', '0': 'âž–âž–âž–âž–âž–', '1': 'ðŸŸ âž–âž–âž–âž–', '2': 'ðŸŸ ðŸŸ âž–âž–âž–',
    '3': 'ðŸŸ ðŸŸ ðŸŸ âž–âž–', '4': 'ðŸŸ ðŸŸ ðŸŸ ðŸŸ âž–', '5': 'ðŸŸ ðŸŸ ðŸŸ ðŸŸ ðŸŸ ', '6': 'âž–ðŸŸ ðŸŸ ðŸŸ ðŸŸ ', '7': 'âž–âž–ðŸŸ ðŸŸ ðŸŸ ',
    '8': 'âž–âž–âž–ðŸŸ ðŸŸ ', '9': 'âž–âž–âž–âž–ðŸŸ '
  };

  const convertToMorse = (text) => {
    return text.toUpperCase().split('').map(char => {
      return morseCodeMap[char] || char;
    });
  };

  return (
    <Modal
      isOpen={isOpen}
      onRequestClose={onRequestClose}
      contentLabel="Oyun Verileri"
      className={`games-modal ${isDarkMode ? 'dark' : ''}`}
      overlayClassName="games-modal-overlay"
    >
        <div className="games-card-container">        
      <button onClick={onRequestClose} className="close-button">
        <FaTimes />
      </button>
      <h2 className="game-data-title">{t("game_data")}</h2>
      {gameData ? (
        <div className="game-data">
          <h3>{t("daily_cards")}</h3>
          <ul>
            {gameData.dailyCards.map((card, index) => (
              <li key={index}>{formatCardName(card)}</li>
            ))}
          </ul>
          <h3>{t("morse_code")}</h3>          
          <div className="morse-code-conversion">
            {convertToMorse(gameData.morseCode).map((morse, index) => (
              <p key={index} className="morse-code-item">
                <span className="morse-letter">{gameData.morseCode[index]}:</span>
                <span className="morse-code">{morse}</span>
              </p>
            ))}
          </div>
          <div className="last-update-container">
          <h3>{t("last_update")}</h3>
          <p>{formatDate(gameData.updated)}</p>
          </div>
        </div>
        
      ) : (
        <div className="loading-container">
          <div className="loader"></div>
          <p>{t("loading_game_data")}</p>
        </div>
      )}
      </div>
    </Modal>
  );
}

export default GamesModal;